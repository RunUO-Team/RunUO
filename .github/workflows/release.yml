name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore Server/Server.csproj

    - name: Build Release
      run: dotnet build Server/Server.csproj --configuration Release --no-restore

    - name: Create release archives
      run: |
        cd Distribution/Release
        Compress-Archive -Path * -DestinationPath ../../RunUO-${{ github.ref_name }}.zip
        # Remove debug symbols for main release
        Remove-Item *.pdb
        Compress-Archive -Path * -DestinationPath ../../RunUO-${{ github.ref_name }}-Runtime.zip

    - name: Create GitHub Release
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        gh release create ${{ github.ref_name }} `
          --title "RunUO v3.0 - .NET 8 Cross-Platform Release" `
          --notes "# RunUO v3.0 - .NET 8 Cross-Platform Release

        Major modernization of RunUO bringing it into the modern .NET ecosystem with full cross-platform support.

        ## üéØ Key Features
        - **Migrated to .NET 8** for modern runtime and cross-platform compatibility
        - **True Cross-Platform** - runs natively on Windows, Linux, and macOS
        - **Modernized APIs** - updated deprecated crypto, network, and system APIs
        - **Simplified UO Data Discovery** - automatic detection with cross-platform fallbacks
        - **Removed Legacy Systems** - eliminated Reports engine for cleaner codebase
        - **Updated Version** - 3.0.0.0 displayed in server console

        ## üîß Technical Changes
        - Upgraded from .NET Framework to .NET 8.0
        - Removed Windows-specific dependencies (Registry lookups)
        - Updated deprecated APIs (MD5, SHA1, TimeZone, WebRequest)
        - Fixed thousands of nullable reference type warnings
        - Deleted entire Reports engine (35+ files, 6,675 lines removed)

        ## üì¶ Installation
        1. Download the release archive
        2. Extract to your desired directory
        3. Place UO client files in UOData/ folder in server root
        4. Ensure you have .NET 8.0 Runtime installed
        5. Run RunUO.exe (Windows) or ./RunUO (Linux/macOS)

        ## üîß Requirements
        - .NET 8.0 Runtime or later
        - Ultima Online client files (place in UOData/ folder)
        - Windows, Linux, or macOS

        ## ‚ö†Ô∏è Breaking Changes
        - Reports engine completely removed
        - Windows Registry lookups replaced with UOData folder requirement
        - Some deprecated API signatures updated

        Built from commit: ${{ github.sha }}" `
          --latest `
          RunUO-${{ github.ref_name }}.zip `
          RunUO-${{ github.ref_name }}-Runtime.zip